function [ P, Lu, L, L_dx, L_dy] = gll_lag()

%==========
%GLL Points
%==========
P=[-1 ,-sqrt(1/5) , sqrt(1/5) , 1];

%========================================
%Lagrange Polynomials in canonical domain
%========================================
L1=@(x) (x-P(2)).*(x-P(3)).*(x-P(4))./((P(1)-P(2)).*(P(1)-P(3)).*(P(1)-P(4)));
L2=@(x) (x-P(1)).*(x-P(3)).*(x-P(4))./((P(2)-P(1)).*(P(2)-P(3)).*(P(2)-P(4)));
L3=@(x) (x-P(1)).*(x-P(2)).*(x-P(4))./((P(3)-P(1)).*(P(3)-P(2)).*(P(3)-P(4)));
L4=@(x) (x-P(1)).*(x-P(3)).*(x-P(2))./((P(4)-P(1)).*(P(4)-P(3)).*(P(4)-P(2)));
Lu={L1,L2,L3,L4};

L={0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0};
n=1;

for i=1:4
    
    for j=1:4
        
        L{n}=@(x,y)Lu{i}(x).*Lu{j}(y);
        n=n+1;
        
    end
    
end

%===================================
%Derivatives of Lagrange polynomials
%===================================
L1_d=@(x) ((x-P(2)).*(x-P(3)) + (x-P(2)).*(x-P(4)) +(x-P(3)).*(x-P(4)))./((P(1)-P(2)).*(P(1)-P(3)).*(P(1)-P(4)));
L2_d=@(x) ((x-P(1)).*(x-P(3)) + (x-P(1)).*(x-P(4)) +(x-P(3)).*(x-P(4)))./((P(2)-P(1)).*(P(2)-P(3)).*(P(2)-P(4)));
L3_d=@(x) ((x-P(1)).*(x-P(2)) + (x-P(1)).*(x-P(4)) +(x-P(2)).*(x-P(4)))./((P(3)-P(1)).*(P(3)-P(2)).*(P(3)-P(4)));
L4_d=@(x) ((x-P(1)).*(x-P(2)) + (x-P(1)).*(x-P(3)) +(x-P(2)).*(x-P(3)))./((P(4)-P(1)).*(P(4)-P(2)).*(P(4)-P(3)));
Lu_d={L1_d, L2_d, L3_d, L4_d};

L_dx={0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0};
n=1;

for i=1:4
    
    for j=1:4
        
        L_dx{n}=@(x,y) Lu_d{i}(x).*Lu{j}(y);
        n=n+1;
        
    end
    
end

L_dy={0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0};
n=1;

for i=1:4
    
    for j=1:4
        
        L_dy{n}=@(x,y)Lu{i}(x).*Lu_d{j}(y);
        n=n+1;
        
    end
    
end

return;

end